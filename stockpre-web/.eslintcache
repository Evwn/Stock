[{"C:\\Users\\admin\\Downloads\\Compressed\\StockPrediction\\StockPrediction\\stockpre-web\\src\\index.js":"1","C:\\Users\\admin\\Downloads\\Compressed\\StockPrediction\\StockPrediction\\stockpre-web\\src\\reportWebVitals.js":"2","C:\\Users\\admin\\Downloads\\Compressed\\StockPrediction\\StockPrediction\\stockpre-web\\src\\navigation\\index.js":"3","C:\\Users\\admin\\Downloads\\Compressed\\StockPrediction\\StockPrediction\\stockpre-web\\src\\stocks\\index.js":"4","C:\\Users\\admin\\Downloads\\Compressed\\StockPrediction\\StockPrediction\\stockpre-web\\src\\navigation\\search.js":"5","C:\\Users\\admin\\Downloads\\Compressed\\StockPrediction\\StockPrediction\\stockpre-web\\src\\navigation\\lookup.js":"6","C:\\Users\\admin\\Downloads\\Compressed\\StockPrediction\\StockPrediction\\stockpre-web\\src\\navigation\\components.js":"7","C:\\Users\\admin\\Downloads\\Compressed\\StockPrediction\\StockPrediction\\stockpre-web\\src\\stocks\\components.js":"8","C:\\Users\\admin\\Downloads\\Compressed\\StockPrediction\\StockPrediction\\stockpre-web\\src\\stocks\\buttons.js":"9","C:\\Users\\admin\\Downloads\\Compressed\\StockPrediction\\StockPrediction\\stockpre-web\\src\\stocks\\lookup.js":"10","C:\\Users\\admin\\Downloads\\Compressed\\StockPrediction\\StockPrediction\\stockpre-web\\src\\App.js":"11","C:\\Users\\admin\\Downloads\\Compressed\\StockPrediction\\StockPrediction\\stockpre-web\\src\\stocks\\detail.js":"12","C:\\Users\\admin\\Downloads\\Compressed\\StockPrediction\\StockPrediction\\stockpre-web\\src\\stocks\\list.js":"13","C:\\Users\\admin\\Downloads\\Compressed\\StockPrediction\\StockPrediction\\stockpre-web\\src\\stocks\\datafeed.js":"14","C:\\Users\\admin\\Downloads\\Compressed\\StockPrediction\\StockPrediction\\stockpre-web\\src\\lookup\\index.js":"15","C:\\Users\\admin\\Downloads\\Compressed\\StockPrediction\\StockPrediction\\stockpre-web\\src\\stocks\\streaming.js":"16","C:\\Users\\admin\\Downloads\\Compressed\\StockPrediction\\StockPrediction\\stockpre-web\\src\\charting_library\\charting_library.esm.js":"17","C:\\Users\\admin\\Downloads\\Compressed\\StockPrediction\\StockPrediction\\stockpre-web\\src\\lookup\\components.js":"18","C:\\Users\\admin\\Downloads\\Compressed\\StockPrediction\\StockPrediction\\stockpre-web\\src\\ENV.js":"19"},{"size":1292,"mtime":1752301193000,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1752301193000,"results":"22","hashOfConfig":"21"},{"size":287,"mtime":1752301193000,"results":"23","hashOfConfig":"21"},{"size":453,"mtime":1752301193000,"results":"24","hashOfConfig":"21"},{"size":3364,"mtime":1752353178115,"results":"25","hashOfConfig":"21"},{"size":211,"mtime":1752301193000,"results":"26","hashOfConfig":"21"},{"size":4671,"mtime":1752301193000,"results":"27","hashOfConfig":"21"},{"size":13359,"mtime":1752371347839,"results":"28","hashOfConfig":"21"},{"size":3165,"mtime":1752301193000,"results":"29","hashOfConfig":"21"},{"size":641,"mtime":1752301193000,"results":"30","hashOfConfig":"21"},{"size":634,"mtime":1752301193000,"results":"31","hashOfConfig":"21"},{"size":5008,"mtime":1752301193000,"results":"32","hashOfConfig":"21"},{"size":2270,"mtime":1752353163780,"results":"33","hashOfConfig":"21"},{"size":4755,"mtime":1752357121515,"results":"34","hashOfConfig":"21"},{"size":72,"mtime":1752301193000,"results":"35","hashOfConfig":"21"},{"size":1013,"mtime":1752357131670,"results":"36","hashOfConfig":"21"},{"size":12276,"mtime":1752301193000,"results":"37","hashOfConfig":"21"},{"size":1528,"mtime":1752301193000,"results":"38","hashOfConfig":"21"},{"size":186,"mtime":1752350634426,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"l5znm4",{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\admin\\Downloads\\Compressed\\StockPrediction\\StockPrediction\\stockpre-web\\src\\index.js",[],"C:\\Users\\admin\\Downloads\\Compressed\\StockPrediction\\StockPrediction\\stockpre-web\\src\\reportWebVitals.js",[],"C:\\Users\\admin\\Downloads\\Compressed\\StockPrediction\\StockPrediction\\stockpre-web\\src\\navigation\\index.js",[],"C:\\Users\\admin\\Downloads\\Compressed\\StockPrediction\\StockPrediction\\stockpre-web\\src\\stocks\\index.js",[],"C:\\Users\\admin\\Downloads\\Compressed\\StockPrediction\\StockPrediction\\stockpre-web\\src\\navigation\\search.js",["85","86","87","88"],"import { fade, InputBase, makeStyles, TextField } from \"@material-ui/core\";\nimport { SearchRounded } from \"@material-ui/icons\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport React, { useState, useEffect } from \"react\";\n\nimport { apiStockSearch } from \"./lookup\";\nimport Swal from 'sweetalert2';\n\nexport function StockSearchComponent(props) {\n  const classes = useStyles();\n  const [searchTerm, setSearchTerm] = useState(undefined);\n  const [searchResults, setSearchResults] = useState([]);\n\n  const handleSearchTermChange = (event, value) => {\n    if (event && event.type === 'change') {\n      console.log(\"TYPED: \", event.target.value)\n      setSearchTerm(event.target.value);\n    } else {\n      console.log(\"AUTO SEARCH: \", value);\n      setSearchTerm(value);\n    }\n    console.log(\"SEARCHTERM: \", searchTerm);\n  };\n\n  const handleSearchSubmit = (event) => {\n    console.log(\"SEARCH SUBMIT: \", event);\n    console.log(searchTerm);\n    event.preventDefault();\n    let regex = /([^-]+) - .*/;\n    const match = searchTerm.match(regex);\n    if (match.length === 0) {\n      window.location.href = `/stocks/${searchTerm.toUpperCase()}`\n      return;\n    }\n    window.location.href = `/stocks/${match[1].toUpperCase()}`\n  };\n\n  const handleSearchTermLookup = (response, status) => {\n    if (status === 200) {\n      setSearchResults([...response]);\n      console.log(\"SEARCH RESULTS: \", searchResults);\n    } else if (status === 403) {\n      Swal.fire({icon: 'error', title: 'Unauthorized', text: 'Must login to access'});\n    } else {\n      Swal.fire({icon: 'error', title: 'Stock Error', text: `Error finding stock, status: ${status}`});\n    }\n  };\n\n  useEffect(() => {\n    apiStockSearch(searchTerm, handleSearchTermLookup);\n  }, [searchTerm]);\n\n  return (\n    <form style={{padding: \"0px 10% 0px 10%\",width: \"75%\"}} onSubmit={handleSearchSubmit}>\n      <Autocomplete \n        id=\"demo\" \n        value={searchTerm}\n        freeSolo\n        options={searchResults.map((option) => {\n          return option.ticker + \" - \" + option.company_name\n        })}\n        getOptionLabel={option => option}\n        getOptionSelected={(option, value) => option === value.ticker}\n        onChange={handleSearchTermChange} \n        onInputChange={(event) => handleSearchTermChange(event, undefined)}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label=\"Ticker\"\n            margin=\"normal\"\n            variant=\"outlined\"\n          /> \n        )}\n      />\n    </form>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  search: {\n    position: \"relative\",\n    borderRadius: \"50px\",\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: \"50%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(1),\n      width: \"50%\",\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0,2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n    width: \"100%\"\n  },\n  inputInput: {\n    padding: theme.spacing(3, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n  },\n}));\n","C:\\Users\\admin\\Downloads\\Compressed\\StockPrediction\\StockPrediction\\stockpre-web\\src\\navigation\\lookup.js",[],"C:\\Users\\admin\\Downloads\\Compressed\\StockPrediction\\StockPrediction\\stockpre-web\\src\\navigation\\components.js",["89","90"],"import React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { StockSearchComponent } from \"./search\";\n\n// Max and Ahmed Material UI\nimport { AppBar, IconButton, Toolbar, List, ListItem, ListItemText, makeStyles, Container, useScrollTrigger, Link, Zoom, Fab } from \"@material-ui/core\";\nimport { HomeRounded, KeyboardArrowUpRounded } from \"@material-ui/icons\";\nimport { PropTypes } from \"prop-types\";\nimport Papa from \"papaparse\";\nimport fs from \"fs\";\n\nconst navLinks = [\n  { title: \"Profile\", path: \"/profile\" },\n  { title: \"Logout\", path: \"/logout\" },\n]\n\nconst useStyles = makeStyles((theme) => ({\n  colorScheme: {\n    background: \"linear-gradient(180deg, #FE6B8B 30%, #E8A87C 90%)\"\n  },\n  navDisplayFlex: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  navbarDisplayFlex: {\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  linkText: {\n    marginTop: \"5px\",\n    textDecoration: \"none\",\n    textTransform: \"none\",\n    color: \"white\",\n    \"&:hover\": {\n      color: \"white\",\n      textDecoration: \"none\"\n    }\n  },\n  scrollTop: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2)\n  },\n  toolbar: {\n    marginBottom: \"5px\"\n  }\n}));\n\nexport const HeaderComponent = (props) => {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Toolbar id=\"back-to-top-anchor\"/>\n      <ElevationScroll {...props}>\n        <AppBar className={classes.colorScheme}>\n          <Toolbar className={classes.toolbar} id=\"back-to-top-anchor\">\n            <Container maxWidth=\"xl\" className={classes.navbarDisplayFlex}>\n              <IconButton href=\"/\" className={classes.linkText} edge=\"start\" color=\"inherit\" aria-label=\"home\">\n                <HomeRounded fontSize=\"large\"/>\n              </IconButton>\n              <StockSearchComponent/>\n              <List component=\"nav\" aria-labelledby=\"main navigation\" className={classes.navDisplayFlex}>\n                {navLinks.map(({ title, path }) => (\n                  <Link href={path} key={title} className={classes.linkText} underline=\"always\">\n                    <ListItem button>\n                      <ListItemText primary={title}/>\n                    </ListItem>\n                  </Link>\n                ))}\n              </List>\n            </Container>\n          </Toolbar>\n        </AppBar>\n      </ElevationScroll>\n      <ScrollTop {...props}>\n        <Fab className={classes.colorScheme} size=\"small\" aria-label=\"scroll back to top\">\n          <KeyboardArrowUpRounded/>\n        </Fab>\n      </ScrollTop>\n      <br/>\n    </React.Fragment>\n  );\n}\n\nfunction ElevationScroll(props) {\n  const { children } = props;\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0\n  });\n  return React.cloneElement(children, {\n    elevation: trigger ? 4 : 0,\n  });\n}\n\nfunction ScrollTop(props) {\n  const { children, window } = props;\n  const classes = useStyles();\n  const trigger = useScrollTrigger({\n    target: window ? window() : undefined,\n    disableHysteresis: true,\n    threshold: 100\n  });\n  const handleClick = (event) => {\n    const anchor = (event.target.ownerDocument || document).querySelector(\"#back-to-top-anchor\");\n    if (anchor) {\n      anchor.scrollIntoView({ behavior: \"smooth\", block: \"center\"});\n    }\n  };\n  return (\n    <Zoom in={trigger}>\n      <div onClick={handleClick} role=\"presentation\" className={classes.scrollTop}>\n        {children}\n      </div>\n    </Zoom>\n  );\n}\n\nScrollTop.propTypes = {\n  children: PropTypes.element.isRequired,\n  window: PropTypes.func,\n};\n\n// Working code\nexport function StockLink(props) {\n  const { stock } = props;\n  const handleStockLink = (event) => {\n    event.preventDefault();\n    window.location.href = `/stocks/${stock.ticker}`;\n  };\n  return <span onClick={handleStockLink}>{stock.ticker} </span>;\n}\n\nexport function NavigationComponent(props) {\n  return (\n    <Container>\n      <Row className=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\">\n        <Col>\n          {\" \"}\n          <StockSearchComponent />{\" \"}\n        </Col>\n        <Col>\n          {\" \"}\n          <HomeLink />{\" \"}\n        </Col>\n        <Col>\n          {\" \"}\n          <ProfileLink />{\" \"}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nfunction HomeLink(props) {\n  const handleHomeLink = (event) => {\n    event.preventDefault();\n    window.location.href = \"/\";\n  };\n  return <span onClick={handleHomeLink}>Home</span>;\n}\n\nfunction ProfileLink(props) {\n  const handleProfileLink = (event) => {\n    event.preventDefault();\n    window.location.href = \"/profile\";\n  };\n  return <span onClick={handleProfileLink}>Profile</span>;\n}\n","C:\\Users\\admin\\Downloads\\Compressed\\StockPrediction\\StockPrediction\\stockpre-web\\src\\stocks\\components.js",["91","92","93","94","95","96","97","98","99","100","101","102"],"C:\\Users\\admin\\Downloads\\Compressed\\StockPrediction\\StockPrediction\\stockpre-web\\src\\stocks\\buttons.js",["103","104"],"import React from 'react'\nimport {apiStockAction} from './lookup'\n\nimport { Button, makeStyles, fade, Slide, Dialog, DialogContent, DialogContentText, DialogActions, DialogTitle } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        background: 'linear-gradient(180deg, #FE6B8B 30%, #E8A87C 90%)',\n        margin: '5px',\n        borderRadius: '50px',\n        \"&:hover\": {\n            background: 'linear-gradient(180deg, #FE6B8B 0%, #E8A87C 0%)',\n        }\n    },\n    dialog: {\n        justifyContent: 'center'\n    }\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props}/>;\n});\n\nexport function AddRemoveButton (props) {\n    const classes = useStyles();\n    const { ticker, isTracking, predict, handleActionBackend } = props;\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleClick = (event) => {\n        setOpen(false);\n        event.preventDefault()\n        apiStockAction(ticker, predict, handleActionBackend)\n    }\n    if (isTracking == true) {\n        return (\n            <div>\n                <Button variant=\"contained\" className={classes.button} onClick={handleClickOpen}>Remove</Button>\n                <Dialog open={open} TransitionComponent={Transition} keepMounted onClose={handleClose} aria-labelledby=\"alert-title\" aria-describedby=\"alert-description\">\n                    <DialogTitle id=\"alert-title\">{\"Remove stock?\"}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText id=\"alert-description\">Are you sure you want to remove this stock? Doing so will remove it from your list of tracked stocks.</DialogContentText>\n                    </DialogContent>\n                    <DialogActions className={classes.dialog}>\n                        <Button variant=\"contained\" className={classes.button} onClick={handleClick}>\n                            Remove\n                        </Button>\n                        <Button variant=\"contained\" className={classes.button} onClick={handleClose}>\n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    } else {\n        return (\n            <div>\n                <Button variant=\"contained\" className={classes.button} onClick={handleClick}>\n                    Add\n                </Button>\n            </div>\n        )\n    }\n}\n\nexport function ActionButton (props) {\n    const classes = useStyles();\n    const {ticker, isTracking, predict, handleActionBackend} = props\n\n    const handleClick = (event) => {\n        event.preventDefault()\n        apiStockAction(ticker, predict, handleActionBackend)\n    }\n    const display = isTracking === true ? 'Remove' : 'Add'\n    return predict === true ? <Button variant=\"contained\" className={classes.button} onClick={handleClick}>Predict</Button> : <Button variant=\"contained\" className={classes.button} onClick={handleClick}> {display} </Button>\n}","C:\\Users\\admin\\Downloads\\Compressed\\StockPrediction\\StockPrediction\\stockpre-web\\src\\stocks\\lookup.js",[],"C:\\Users\\admin\\Downloads\\Compressed\\StockPrediction\\StockPrediction\\stockpre-web\\src\\App.js",[],"C:\\Users\\admin\\Downloads\\Compressed\\StockPrediction\\StockPrediction\\stockpre-web\\src\\stocks\\detail.js",["105","106"],"import { widget } from '../charting_library';\nimport React, { useEffect } from \"react\";\nimport Datafeed from \"./datafeed.js\"\nimport { apiPredictionLookup } from \"./lookup\";\nimport { Card, CardContent, makeStyles } from '@material-ui/core';\n\nfunction getLanguageFromURL() {\n\tconst regex = new RegExp('[\\\\?&]lang=([^&#]*)');\n\tconst results = regex.exec(window.location.search);\n\treturn results === null ? null : decodeURIComponent(results[1].replace(/\\+/g, ' '));\n}\nfunction americanDateToUnixTimestamp(date) {\n\t// mm/dd/yyyy to yyyy-mm-dd to Javascript timestamp (ms) to Unix timestamp (s)\n\tlet fields = date.split('/');\n\tdate = fields[2] + '-' + fields[0] + '-' + fields[1];\n\treturn new Date(date).getTime() / 1000;\n}\n\nconst defaultSettings = {\n\tsymbol: 'AAPL',\n\tinterval: 'D',\n\tcontainerId: 'tv_chart_container',\n\tdatafeedUrl: 'https://demo_feed.tradingview.com',\n\tlibraryPath: '/static/js/charting_library/', // Change to \"/static/js/charting_library/\" for django local and production\n\tchartsStorageUrl: 'https://saveload.tradingview.com',\n\tchartsStorageApiVersion: '1.1',\n\tclientId: 'tradingview.com',\n\tuserId: 'public_user_id',\n\tfullscreen: false,\n\tautosize: false,\n\tstudiesOverrides: {},\n};\nlet currPrediction = null;\nlet tvWidget = null;\n\nexport function Stock(props) {\n\tconst {\n\t\tsymbol,\n\t\tprediction,\n\t\tdidPredictionLookup,\n\t\thandleBackendPredictionLookup\n\t} = props;\n\tconst classes = useStyles();\n\tuseEffect(() => {\n\t\tconst widgetOptions = {\n\t\t\tsymbol: symbol ? symbol : defaultSettings.symbol, // Could throw warning here\n\t\t\t// BEWARE: no trailing slash is expected in feed URL\n\t\t\tdatafeed: Datafeed,\n\t\t\tinterval: defaultSettings.interval,\n\t\t\tcontainer_id: defaultSettings.containerId,\n\t\t\tlibrary_path: defaultSettings.libraryPath,\n\t\t\tlocale: getLanguageFromURL() || 'en',\n\t\t\tdisabled_features: [\n\t\t\t\t'use_localstorage_for_settings', \n\t\t\t\t'left_toolbar', \n\t\t\t\t'header_symbol_search', \n\t\t\t\t'display_market_status', \n\t\t\t\t'header_screenshot', \n\t\t\t\t'header_compare', \n\t\t\t\t'header_indicators', \n\t\t\t\t'compare_symbol', \n\t\t\t\t'header_saveload', \n\t\t\t\t'create_volume_indicator_by_default', \n\t\t\t\t'control_bar', \n\t\t\t\t'show_chart_property_page', \n\t\t\t\t'countdown'\n\t\t\t],\n\t\t\tenabled_features: ['study_templates'],\n\t\t\tcharts_storage_url: defaultSettings.chartsStorageUrl,\n\t\t\tcharts_storage_api_version: defaultSettings.chartsStorageApiVersion,\n\t\t\tclient_id: defaultSettings.clientId,\n\t\t\tuser_id: defaultSettings.userId,\n\t\t\tfullscreen: defaultSettings.fullscreen,\n\t\t\tautosize: defaultSettings.autosize,\n\t\t\tstudies_overrides: defaultSettings.studiesOverrides,\n\t\t};\n\t\ttvWidget = new widget(widgetOptions);\n\t\tif (didPredictionLookup === false && !currPrediction) {\n\t\t  apiPredictionLookup(symbol, handleBackendPredictionLookup);\n\t\t};\n\t\tif (prediction && !currPrediction) {\n\t\t\tcurrPrediction = prediction;\n\t\t\tconsole.log(\"prediction set\")\n\t\t\tconsole.log(currPrediction);\n\t\t}\n\t\tif (currPrediction !== null && tvWidget !== null) {\n\t\t\tconst currTime = new Date().getTime() / 1000;\n\t\t\tconst predTime = americanDateToUnixTimestamp(currPrediction.prediction_date);\n\t\t\ttvWidget.onChartReady(() => {\n\t\t\t\tconst chart = tvWidget.chart();\n\t\t\t\tconst {from, to} = chart.getVisibleRange();\n\t\t\t\tchart.setVisibleRange({from: from, to: predTime});\n\t\t\t\ttry {\n\t\t\t\t\tchart.createMultipointShape(\n\t\t\t\t\t\t[{\n\t\t\t\t\t\t\ttime: currTime,\n\t\t\t\t\t\t\tchannel: 'close'\n\t\t\t\t\t\t}, \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttime: predTime,\n\t\t\t\t\t\t\tprice: currPrediction.upper_value,\n\t\t\t\t\t\t\tchannel: 'close'\n\t\t\t\t\t\t}], \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tshape: 'trend_line',\n\t\t\t\t\t\t\tlock: true,\n\t\t\t\t\t\t\toverrides: {\n\t\t\t\t\t\t\t\tlinecolor: '#00ff00',\n\t\t\t\t\t\t\t\tlinestyle: 2\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, null\n\t\t\t\t\t);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\tchart.createMultipointShape(\n\t\t\t\t\t\t[{\n\t\t\t\t\t\t\ttime: currTime,\n\t\t\t\t\t\t\tchannel: 'close'\n\t\t\t\t\t\t}, \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttime: predTime, \n\t\t\t\t\t\t\tprice: currPrediction.lower_value,\n\t\t\t\t\t\t\tchannel: 'close'\n\t\t\t\t\t\t}], \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tshape: 'trend_line', \n\t\t\t\t\t\t\tlock: true,\n\t\t\t\t\t\t\toverrides: {\n\t\t\t\t\t\t\t\tlinecolor: '#ff0000',\n\t\t\t\t\t\t\t\tlinestyle: 2\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, null\n\t\t\t\t\t);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\tchart.createMultipointShape(\n\t\t\t\t\t\t[{\n\t\t\t\t\t\t\ttime: currTime,\n\t\t\t\t\t\t\tchannel: 'close'\n\t\t\t\t\t\t}, \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttime: predTime, \n\t\t\t\t\t\t\tprice: currPrediction.future_value,\n\t\t\t\t\t\t\tchannel: 'close'\n\t\t\t\t\t\t}], \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tshape: 'trend_line', \n\t\t\t\t\t\t\tlock: true,\n\t\t\t\t\t\t\toverrides: {\n\t\t\t\t\t\t\t\tlinecolor: '#000000',\n\t\t\t\t\t\t\t\tlinestyle: 2\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, null\n\t\t\t\t\t);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t}\n\t\treturn () => {\n\t\t\tif (tvWidget !== null) {\n\t\t\t\ttvWidget.remove();\n\t\t\t\ttvWidget = null;\n\t\t\t}\n\t\t\tcurrPrediction = null;\n\t\t}\n\t}, [prediction]);\n\n\treturn (\n\t\t<div>\n\t\t\t<Card className={classes.root}>\n\t\t\t\t<CardContent className={classes.content}>\n\t\t\t\t\t<div id={ defaultSettings.containerId } className={ 'TVChartContainer' }/>\n\t\t\t\t</CardContent>\n\t\t\t</Card>\n\t\t</div>\n\n\t);\n}\n\nconst useStyles = makeStyles({\n\troot: {\n\t\tmarginTop: '15px',\n\t\tmarginBottom: '4px'\n\t},\n\tcontent: {\n\t\tborderRadius: '50px'\n\t}\n});","C:\\Users\\admin\\Downloads\\Compressed\\StockPrediction\\StockPrediction\\stockpre-web\\src\\stocks\\list.js",["107"],"import React, { useEffect, useState } from \"react\";\n\nimport { apiStockList } from \"./lookup\";\n\nimport { StockLink } from \"./components\";\nimport Swal from 'sweetalert2';\n\nexport function StockList(props) {\n  const [stocksInit, setStocksInit] = useState([]);\n  const [stocks, setStocks] = useState([]);\n  const [stocksDidSet, setStocksDidSet] = useState(false);\n  const [hasPrediction, setHasPrediction] = useState(false);\n  const [prediction, setPrediction] = useState(null);\n  const [didPredictionLookup, setDidPredictionLookup] = useState(false);\n\n  const handleBackendPredictionLookup = (response, status) => {\n    if (status === 200) {\n      const responsePrediction = response.prediction;\n      const newPrediction =\n        responsePrediction !== null\n          ? {\n              future_value: responsePrediction.future_value,\n              upper_value: responsePrediction.upper_value,\n              lower_value: responsePrediction.lower_value,\n              prediction_date: response.prediction_date,\n            }\n          : null;\n      setPrediction(newPrediction);\n      setHasPrediction(true);\n      setDidPredictionLookup(true);\n    } else {\n      Swal.fire({icon: 'error', title: 'Prediction Error', text: 'Unable to find prediction'});\n    }\n  };\n\n  useEffect(() => {\n    const final = [...props.newStocks].concat(stocksInit);\n    if (final.length !== stocks.length) {\n      setStocks(final);\n    }\n  }, [props.newStocks, stocks, stocksInit]);\n\n  useEffect(() => {\n    if (stocksDidSet === false) {\n      const handleStockListLookup = (response, status) => {\n        if (status === 200) {\n          setStocksInit([...response]);\n          setStocksDidSet(true);\n        } else {\n          Swal.fire({icon: 'error', title: 'Error', text: `Error, status: ${status}`});\n        }\n      };\n      apiStockList(handleStockListLookup);\n    }\n  }, [stocksInit, stocksDidSet, setStocksDidSet]);\n\n  return (\n    <div>\n      {stocks !== null &&\n        stocks.map((item, index) => <StockLink \n          key={index}\n          stock={item}\n          length={stocks.length}\n          didPredictionLookup={didPredictionLookup}\n          prediction={prediction}\n          handleBackendPredictionLookup={handleBackendPredictionLookup}/>\n        )\n      }\n    </div>\n  );\n}\n","C:\\Users\\admin\\Downloads\\Compressed\\StockPrediction\\StockPrediction\\stockpre-web\\src\\stocks\\datafeed.js",["108"],"import { subscribeOnStream, unsubscribeFromStream } from './streaming.js'\n// Remove Finnhub import and API key setup\n// const finnhub = require('finnhub');\n// const api_key = finnhub.ApiClient.instance.authentications['api_key'];\n// api_key.apiKey = authToken;\n\nconst lastBarsCache = new Map();\n\nconst configurationData = {\n    supported_resolutions: ['1D', '1W', '1M'], // Will need to check if these resolutions are valid\n    exchanges: [\n        {\n            value: 'NYSE',\n            name: 'NYSE',\n            desc: 'New York Stock Exchange'\n        }\n    ],\n    symbol_types: [\n        {\n            name: 'Common Stock',\n            value: 'stock'\n        }\n    ]\n};\n\nexport default {\n    onReady: (\n        callback\n    ) => {\n        setTimeout(() => callback(configurationData));\n    },\n    resolveSymbol: async (\n        symbolName,\n        onSymbolResolvedCallback,\n        onResolveErrorCallback\n    ) => {\n        // Use Yahoo Finance API instead of Finnhub\n        try {\n            const response = await fetch(`https://query1.finance.yahoo.com/v8/finance/chart/${symbolName}?interval=1d&range=1d`);\n            const data = await response.json();\n            \n            if (data.chart.result && data.chart.result.length > 0) {\n                const symbolInfo = {\n                    ticker: symbolName,\n                    name: symbolName,\n                    description: symbolName,\n                    type: 'stock',\n                    session: '24x7',\n                    timezone: 'Etc/UTC',\n                    exchange: \"NYSE\",\n                    minmov: 1,\n                    pricescale: 100,\n                    has_intraday: false,\n                    has_no_volume: true,\n                    has_weekly_and_monthly: false,\n                    supported_resolutions: configurationData.supported_resolutions,\n                    volume_precision: 2,\n                    data_status: 'streaming',\n                };\n                onSymbolResolvedCallback(symbolInfo);\n            } else {\n                onResolveErrorCallback(`Cannot resolve symbol: ${symbolName}`);\n            }\n        } catch (error) {\n            onResolveErrorCallback(`Cannot resolve symbol: ${symbolName}`);\n        }\n    },\n    getBars: async (\n        symbolInfo,\n        resolution,\n        from,\n        to,\n        onHistoryCallback,\n        onErrorCallback,\n        firstDataRequest\n    ) => {\n        const TV2YahooResolutions = {\"1D\":\"1d\", \"1W\":\"5d\", \"1M\":\"1mo\"};\n        \n        try {\n            const response = await fetch(`https://query1.finance.yahoo.com/v8/finance/chart/${symbolInfo.ticker}?interval=${TV2YahooResolutions[resolution]}&period1=${from}&period2=${to}`);\n            const data = await response.json();\n            \n            if (data.chart.result && data.chart.result.length > 0) {\n                const result = data.chart.result[0];\n                const timestamps = result.timestamp;\n                const quotes = result.indicators.quote[0];\n                \n                let bars = [];\n                for (let i = 0; i < timestamps.length; i++) {\n                    if (quotes.open[i] && quotes.high[i] && quotes.low[i] && quotes.close[i]) {\n                        bars.push({\n                            time: timestamps[i] * 1000,\n                            low: quotes.low[i],\n                            high: quotes.high[i],\n                            open: quotes.open[i],\n                            close: quotes.close[i]\n                        });\n                    }\n                }\n                \n                if (firstDataRequest && bars.length > 0) {\n                    lastBarsCache.set(symbolInfo.ticker, { ...bars[bars.length - 1] });\n                }\n                \n                onHistoryCallback(bars, {noData: bars.length === 0});\n            } else {\n                onHistoryCallback([], {noData: true});\n            }\n        } catch (error) {\n            onErrorCallback(error);\n        }\n    },\n    searchSymbols: async (\n        userInput,\n        exchange,\n        symbolType,\n        onResultReadyCallback\n    ) => {\n        console.log(\"SEARCHED\");\n        // Implement symbol search if needed\n        onResultReadyCallback([]);\n    },\n    subscribeBars: (\n        symbolInfo,\n        resolution,\n        onRealtimeCallback,\n        subscribeUID,\n        onResetCacheNeededCallback\n    ) => {\n        subscribeOnStream(\n            symbolInfo.ticker,\n            resolution,\n            onRealtimeCallback,\n            subscribeUID,\n            onResetCacheNeededCallback,\n            lastBarsCache.get(symbolInfo.ticker)\n        );\n    },\n    unsubscribeBars: (\n        subscriberUID\n    ) => {\n        unsubscribeFromStream(subscriberUID);\n    }\n};\n","C:\\Users\\admin\\Downloads\\Compressed\\StockPrediction\\StockPrediction\\stockpre-web\\src\\lookup\\index.js",[],"C:\\Users\\admin\\Downloads\\Compressed\\StockPrediction\\StockPrediction\\stockpre-web\\src\\stocks\\streaming.js",["109"],"// Remove Finnhub WebSocket dependency\n// import { authToken } from '../App.js' \n// const socket = new WebSocket(`wss://ws.finnhub.io?token=${authToken}`);\n// document.cookie = `X-Authorization=${authToken}; path=/` \n\nfunction getNextDailyBarTime(barTime) {\n    const date = new Date(barTime);\n    date.setDate(date.getDate() + 1);\n    return date.getTime();\n}\n\nexport function subscribeOnStream(\n    symbolInfo,\n    resolution,\n    onRealtimeCallback,\n    subscriberUID,\n    onResetCacheNeededCallback,\n    lastDailyBar\n) {\n    // Since we're using Yahoo Finance API, we'll implement a simple polling mechanism\n    // instead of WebSocket streaming\n    console.log('Subscribing to symbol:', symbolInfo.ticker);\n    \n    // For now, we'll just acknowledge the subscription\n    // In a real implementation, you might want to set up polling here\n}\n\nexport function unsubscribeFromStream(subscriberUID) {\n    console.log('Unsubscribing from stream:', subscriberUID);\n    // Clean up any polling intervals if needed\n}","C:\\Users\\admin\\Downloads\\Compressed\\StockPrediction\\StockPrediction\\stockpre-web\\src\\charting_library\\charting_library.esm.js",[],"C:\\Users\\admin\\Downloads\\Compressed\\StockPrediction\\StockPrediction\\stockpre-web\\src\\lookup\\components.js",[],"C:\\Users\\admin\\Downloads\\Compressed\\StockPrediction\\StockPrediction\\stockpre-web\\src\\ENV.js",[],{"ruleId":"110","severity":1,"message":"111","line":1,"column":16,"nodeType":"112","messageId":"113","endLine":1,"endColumn":25},{"ruleId":"110","severity":1,"message":"114","line":2,"column":10,"nodeType":"112","messageId":"113","endLine":2,"endColumn":23},{"ruleId":"110","severity":1,"message":"115","line":10,"column":9,"nodeType":"112","messageId":"113","endLine":10,"endColumn":16},{"ruleId":"116","severity":1,"message":"117","line":51,"column":6,"nodeType":"118","endLine":51,"endColumn":18,"suggestions":"119"},{"ruleId":"110","severity":1,"message":"120","line":9,"column":8,"nodeType":"112","messageId":"113","endLine":9,"endColumn":12},{"ruleId":"110","severity":1,"message":"121","line":10,"column":8,"nodeType":"112","messageId":"113","endLine":10,"endColumn":10},{"ruleId":"110","severity":1,"message":"122","line":6,"column":10,"nodeType":"112","messageId":"113","endLine":6,"endColumn":19},{"ruleId":"110","severity":1,"message":"123","line":11,"column":3,"nodeType":"112","messageId":"113","endLine":11,"endColumn":9},{"ruleId":"110","severity":1,"message":"124","line":13,"column":3,"nodeType":"112","messageId":"113","endLine":13,"endColumn":17},{"ruleId":"110","severity":1,"message":"125","line":15,"column":3,"nodeType":"112","messageId":"113","endLine":15,"endColumn":13},{"ruleId":"110","severity":1,"message":"126","line":20,"column":3,"nodeType":"112","messageId":"113","endLine":20,"endColumn":8},{"ruleId":"110","severity":1,"message":"127","line":28,"column":5,"nodeType":"112","messageId":"113","endLine":28,"endColumn":11},{"ruleId":"110","severity":1,"message":"128","line":37,"column":10,"nodeType":"112","messageId":"113","endLine":37,"endColumn":17},{"ruleId":"110","severity":1,"message":"115","line":38,"column":9,"nodeType":"112","messageId":"113","endLine":38,"endColumn":16},{"ruleId":"110","severity":1,"message":"129","line":45,"column":9,"nodeType":"112","messageId":"113","endLine":45,"endColumn":21},{"ruleId":"116","severity":1,"message":"130","line":109,"column":6,"nodeType":"118","endLine":109,"endColumn":70,"suggestions":"131"},{"ruleId":"110","severity":1,"message":"132","line":150,"column":9,"nodeType":"112","messageId":"113","endLine":150,"endColumn":23},{"ruleId":"110","severity":1,"message":"133","line":168,"column":10,"nodeType":"112","messageId":"113","endLine":168,"endColumn":23},{"ruleId":"110","severity":1,"message":"134","line":4,"column":30,"nodeType":"112","messageId":"113","endLine":4,"endColumn":34},{"ruleId":"135","severity":1,"message":"136","line":43,"column":20,"nodeType":"137","messageId":"138","endLine":43,"endColumn":22},{"ruleId":"110","severity":1,"message":"139","line":91,"column":18,"nodeType":"112","messageId":"113","endLine":91,"endColumn":20},{"ruleId":"116","severity":1,"message":"140","line":172,"column":5,"nodeType":"118","endLine":172,"endColumn":17,"suggestions":"141"},{"ruleId":"110","severity":1,"message":"133","line":12,"column":10,"nodeType":"112","messageId":"113","endLine":12,"endColumn":23},{"ruleId":"142","severity":1,"message":"143","line":26,"column":1,"nodeType":"144","endLine":144,"endColumn":3},{"ruleId":"110","severity":1,"message":"145","line":6,"column":10,"nodeType":"112","messageId":"113","endLine":6,"endColumn":29},"no-unused-vars","'InputBase' is defined but never used.","Identifier","unusedVar","'SearchRounded' is defined but never used.","'classes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleSearchTermLookup'. Either include it or remove the dependency array.","ArrayExpression",["146"],"'Papa' is defined but never used.","'fs' is defined but never used.","'authToken' is defined but never used.","'Button' is defined but never used.","'CardActionArea' is defined but never used.","'CardHeader' is defined but never used.","'Paper' is defined but never used.","'length' is assigned a value but never used.","'loading' is assigned a value but never used.","'handleRemove' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currPrediction', 'stock.ticker', and 'update'. Either include them or remove the dependency array.",["147"],"'handleNewStock' is assigned a value but never used.","'hasPrediction' is assigned a value but never used.","'fade' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'to' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'didPredictionLookup', 'handleBackendPredictionLookup', and 'symbol'. Either include them or remove the dependency array.",["148"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'getNextDailyBarTime' is defined but never used.",{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},"Update the dependencies array to be: [handleSearchTermLookup, searchTerm]",{"range":"155","text":"156"},"Update the dependencies array to be: [currPrediction, didPredictionLookup, handleBackendPredictionLookup, prediction, stock.ticker, update]",{"range":"157","text":"158"},"Update the dependencies array to be: [didPredictionLookup, handleBackendPredictionLookup, prediction, symbol]",{"range":"159","text":"160"},[1738,1750],"[handleSearchTermLookup, searchTerm]",[3487,3551],"[currPrediction, didPredictionLookup, handleBackendPredictionLookup, prediction, stock.ticker, update]",[4638,4650],"[didPredictionLookup, handleBackendPredictionLookup, prediction, symbol]"]